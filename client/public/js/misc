app.js

angular.module('projectApp', ['ui.router', 'ngResource', 'projectApp.controllers', 'projectApp.services']);

angular.module('projectApp').config(function($stateProvider) {
  $stateProvider.state('projects', { // state for showing all movies
    url: '/projects',
    templateUrl: 'partials/projects.html',
    controller: 'ProjectListController'
  }).state('viewProject', { //state for showing single movie
    url: '/projects/:id/view',
    templateUrl: 'partials/projects-view.html',
    controller: 'ProjectViewController'
  }).state('newProject', { //state for adding a new movie
    url: '/project/new',
    templateUrl: 'partials/project-add.html',
    controller: 'ProjecttCreateController'
  }).state('editProject', { //state for updating a movie
    url: '/projects/:id/edit',
    templateUrl: 'partials/project-edit.html',
    controller: 'ProjectEditController'
  });
}).run(function($state) {
  $state.go('projects'); //make a transition to movies state when app starts
});

controllers.js
angular.module('projectApp.controllers', []).controller('ProjectListController', function($scope, $state, popupService, $window, Project) {
  $scope.projects = Project.query(); //fetch all movies. Issues a GET to /api/movies

  $scope.deleteProject = function(project) { // Delete a movie. Issues a DELETE to /api/movies/:id
    if (popupService.showPopup('Really delete this?')) {
      project.$delete(function() {
        $window.location.href = ''; //redirect to home
      });
    }
  };
}).controller('ProjectViewController', function($scope, $stateParams, Project) {
  $scope.project = Project.get({ id: $stateParams.id }); //Get a single movie.Issues a GET to /api/movies/:id
}).controller('ProjectCreateController', function($scope, $state, $stateParams, Project) {
  $scope.project = new Project();  //create new movie instance. Properties will be set via ng-model on UI

  $scope.addProject = function() { //create a new movie. Issues a POST to /api/movies
    $scope.project.$save(function() {
      $state.go('projects'); // on success go back to home i.e. movies state.
    });
  };
}).controller('ProjectEditController', function($scope, $state, $stateParams, Project) {
  $scope.updateProject = function() { //Update the edited movie. Issues a PUT to /api/movies/:id
    $scope.project.$update(function() {
      $state.go('project'); // on success go back to home i.e. movies state.
    });
  };

  $scope.loadProject = function() { //Issues a GET request to /api/movies/:id to get a movie to update
    $scope.project = Project.get({ id: $stateParams.id });
  };

  $scope.loadProject(); // Load a movie which can be edited on UI
});

services.js
angular.module('projectApp.services', []).factory('Project', function($resource) {
  return $resource('http://localhost:3000/api/v1/project/:id', { id: '@_id' }, {
    update: {
      method: 'PUT'
    }
  });
});

